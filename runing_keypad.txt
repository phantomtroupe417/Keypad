#include <Keypad.h>
#define Password_Length 5
char Data[Password_Length];
char Master[Password_Length] = "1289";

// Counter for character entries
byte data_count = 0;
int correct = 13;
int wrong = 12;
// Character to hold key input
char customKey;

const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns

char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowPins[ROWS] = {9, 8, 7, 6}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {5, 4, 3, 2}; //connect to the column pinouts of the keypad

//Create an object of keypad
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

void setup(){
  Serial.begin(9600);
}
  
void loop(){
  char key = keypad.getKey();
  if (key){
    Serial.print("Key Pressed : ");
    Serial.println(key);
    Data[data_count] = key;
    data_count++;
  }
  if (data_count == Password_Length - 1) {
 
    if (!strcmp(Data, Master)) {
      // Turn on relay for 5 seconds
      Serial.println("yes");
      digitalWrite(correct, HIGH);
      delay(5000);
      digitalWrite(correct, LOW);
    }
    else {
      Serial.println("no");
      digitalWrite(wrong, HIGH);
      delay(5000);
      digitalWrite(wrong, LOW);
    }
    clearData();
  }
  
}

void clearData() {
  // Go through array and clear data
  while (data_count != 0) {
    Data[data_count--] = 0;
  }
  return;
}
